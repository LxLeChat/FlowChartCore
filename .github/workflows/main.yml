name: Build&Tests
on:
  pull_request:
    branches:
      - master
jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore .\src\
    - name: Build
      run: dotnet build .\src\ --no-restore
  tests:
    strategy:
      matrix:
        platform: [windows-latest,ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    needs: build
    steps:
    - uses: actions/checkout@v1
    - name: Pester Test(s)
      run: Invoke-Pester -Path .\Test\UseCases.Tests.ps1 -Output Detailed -CI
      shell: pwsh
  FinishLine:
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - uses: actions/checkout@v1
    - name: Install PlatyPS
      run: Install-Module -Name PlatyPs -Force
      shell: pwsh
    - name: Copy & Generate Help Files
      run: |
        ## Import PlatyPs
        Import-Module -Name PlatyPs

        ## Copy All Dll to Module Directory
        Copy-Item -Path .\Src\bin\Debug\netcoreapp3.1\*.dll -Destination .\Src\Module\FlowChartCore

        ## Copy Help Directories to Module Directory
        Get-ChildItem -Path .\Docs -Directory | Copy-Item -Container -Destination .\Src\Module\FlowChartCore -Recurse

        ## Fetch All md Files
        $MdFiles = Get-ChildItem -Path .\Src\Module\FlowChartCore\*.md -Recurse

        ## Loop through all md files & generate external help file in the same directory
        $MdFiles.Foreach({ New-ExternalHelp -Path $PsItem.FullName -OutputPath $PSItem.DirectoryName })

        ## Done
      shell: pwsh